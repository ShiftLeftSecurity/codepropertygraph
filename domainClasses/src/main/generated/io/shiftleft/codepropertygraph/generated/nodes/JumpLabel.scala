package io.shiftleft.codepropertygraph.generated.nodes

import io.shiftleft.codepropertygraph.generated.Language.*
import scala.collection.immutable.{IndexedSeq, ArraySeq}

trait JumpLabelEMT extends AnyRef with AstNodeEMT with HasNameEMT with HasParserTypeNameEMT

trait JumpLabelBase extends AbstractNode with AstNodeBase with StaticType[JumpLabelEMT] {
  
  override def propertiesMap: java.util.Map[String, Any] = {
 import io.shiftleft.codepropertygraph.generated.accessors.Lang.*
 val res = new java.util.HashMap[String, Any]()
res.put("CODE", this.code )
this.columnNumber.foreach{p => res.put("COLUMN_NUMBER", p )}
this.lineNumber.foreach{p => res.put("LINE_NUMBER", p )}
res.put("NAME", this.name )
res.put("ORDER", this.order )
res.put("PARSER_TYPE_NAME", this.parserTypeName )
 res
}
}

object JumpLabel {
  val Label = "JUMP_LABEL"
  object PropertyNames {
    val Code = io.shiftleft.codepropertygraph.generated.PropertyNames.CODE
val ColumnNumber = io.shiftleft.codepropertygraph.generated.PropertyNames.COLUMN_NUMBER
val LineNumber = io.shiftleft.codepropertygraph.generated.PropertyNames.LINE_NUMBER
val Name = io.shiftleft.codepropertygraph.generated.PropertyNames.NAME
val Order = io.shiftleft.codepropertygraph.generated.PropertyNames.ORDER
val ParserTypeName = io.shiftleft.codepropertygraph.generated.PropertyNames.PARSER_TYPE_NAME
  }
  object PropertyDefaults {
    val Code = "<empty>"
val Name = "<empty>"
val Order = -1: Int
val ParserTypeName = "<empty>"
  }
}

class JumpLabel(graph_4762: flatgraph.Graph, seq_4762: Int) extends StoredNode(graph_4762, 18.toShort , seq_4762) with JumpLabelBase with AstNode with StaticType[JumpLabelEMT] {
  

  override def productElementName(n: Int): String =
    n match {
      case 0 => "code"
case 1 => "columnNumber"
case 2 => "lineNumber"
case 3 => "name"
case 4 => "order"
case 5 => "parserTypeName"
      case _ => ""
    }

  override def productElement(n: Int): Any =
    n match {
      case 0 => this.code
case 1 => this.columnNumber
case 2 => this.lineNumber
case 3 => this.name
case 4 => this.order
case 5 => this.parserTypeName
      case _ => null
    }

  override def productPrefix = "JumpLabel"
  override def productArity = 6

  override def canEqual(that: Any): Boolean = that != null && that.isInstanceOf[JumpLabel]
}

object NewJumpLabel {
  def apply(): NewJumpLabel = new NewJumpLabel
  private val outNeighbors: Map[String, Set[String]] = Map("ALIAS_OF" -> Set("TYPE"), "ARGUMENT" -> Set("ANNOTATION", "ANNOTATION_LITERAL", "ANNOTATION_PARAMETER", "ANNOTATION_PARAMETER_ASSIGN", "ARRAY_INITIALIZER", "BLOCK", "CALL", "CALL_REPR", "CFG_NODE", "COMMENT", "CONTROL_STRUCTURE", "EXPRESSION", "FIELD_IDENTIFIER", "FILE", "IDENTIFIER", "IMPORT", "JUMP_LABEL", "JUMP_TARGET", "LITERAL", "LOCAL", "MEMBER", "METHOD", "METHOD_PARAMETER_IN", "METHOD_PARAMETER_OUT", "METHOD_REF", "METHOD_RETURN", "MODIFIER", "NAMESPACE", "NAMESPACE_BLOCK", "RETURN", "TEMPLATE_DOM", "TYPE_ARGUMENT", "TYPE_DECL", "TYPE_PARAMETER", "TYPE_REF", "UNKNOWN"), "AST" -> Set("ANNOTATION", "ANNOTATION_LITERAL", "ANNOTATION_PARAMETER", "ANNOTATION_PARAMETER_ASSIGN", "ARRAY_INITIALIZER", "BLOCK", "CALL", "CALL_REPR", "CFG_NODE", "COMMENT", "CONTROL_STRUCTURE", "EXPRESSION", "FIELD_IDENTIFIER", "FILE", "IDENTIFIER", "IMPORT", "JUMP_LABEL", "JUMP_TARGET", "LITERAL", "LOCAL", "MEMBER", "METHOD", "METHOD_PARAMETER_IN", "METHOD_PARAMETER_OUT", "METHOD_REF", "METHOD_RETURN", "MODIFIER", "NAMESPACE", "NAMESPACE_BLOCK", "RETURN", "TEMPLATE_DOM", "TYPE_ARGUMENT", "TYPE_DECL", "TYPE_PARAMETER", "TYPE_REF", "UNKNOWN"), "BINDS" -> Set("BINDING"), "BINDS_TO" -> Set("ANNOTATION", "ANNOTATION_LITERAL", "ANNOTATION_PARAMETER", "ANNOTATION_PARAMETER_ASSIGN", "ARRAY_INITIALIZER", "BLOCK", "CALL", "CALL_REPR", "CFG_NODE", "COMMENT", "CONTROL_STRUCTURE", "EXPRESSION", "FIELD_IDENTIFIER", "FILE", "IDENTIFIER", "IMPORT", "JUMP_LABEL", "JUMP_TARGET", "LITERAL", "LOCAL", "MEMBER", "METHOD", "METHOD_PARAMETER_IN", "METHOD_PARAMETER_OUT", "METHOD_REF", "METHOD_RETURN", "MODIFIER", "NAMESPACE", "NAMESPACE_BLOCK", "RETURN", "TEMPLATE_DOM", "TYPE_ARGUMENT", "TYPE_DECL", "TYPE_PARAMETER", "TYPE_REF", "UNKNOWN"), "CALL" -> Set("ANNOTATION", "ANNOTATION_LITERAL", "ANNOTATION_PARAMETER", "ANNOTATION_PARAMETER_ASSIGN", "ARRAY_INITIALIZER", "BLOCK", "CALL", "CALL_REPR", "CFG_NODE", "COMMENT", "CONTROL_STRUCTURE", "EXPRESSION", "FIELD_IDENTIFIER", "FILE", "IDENTIFIER", "IMPORT", "JUMP_LABEL", "JUMP_TARGET", "LITERAL", "LOCAL", "MEMBER", "METHOD", "METHOD_PARAMETER_IN", "METHOD_PARAMETER_OUT", "METHOD_REF", "METHOD_RETURN", "MODIFIER", "NAMESPACE", "NAMESPACE_BLOCK", "RETURN", "TEMPLATE_DOM", "TYPE_ARGUMENT", "TYPE_DECL", "TYPE_PARAMETER", "TYPE_REF", "UNKNOWN"), "CAPTURE" -> Set("CLOSURE_BINDING"), "CAPTURED_BY" -> Set("CLOSURE_BINDING"), "CDG" -> Set("ANNOTATION", "ANNOTATION_LITERAL", "ANNOTATION_PARAMETER", "ANNOTATION_PARAMETER_ASSIGN", "ARRAY_INITIALIZER", "BLOCK", "CALL", "CALL_REPR", "CFG_NODE", "COMMENT", "CONTROL_STRUCTURE", "EXPRESSION", "FIELD_IDENTIFIER", "FILE", "IDENTIFIER", "IMPORT", "JUMP_LABEL", "JUMP_TARGET", "LITERAL", "LOCAL", "MEMBER", "METHOD", "METHOD_PARAMETER_IN", "METHOD_PARAMETER_OUT", "METHOD_REF", "METHOD_RETURN", "MODIFIER", "NAMESPACE", "NAMESPACE_BLOCK", "RETURN", "TEMPLATE_DOM", "TYPE_ARGUMENT", "TYPE_DECL", "TYPE_PARAMETER", "TYPE_REF", "UNKNOWN"), "CFG" -> Set("ANNOTATION", "ANNOTATION_LITERAL", "ANNOTATION_PARAMETER", "ANNOTATION_PARAMETER_ASSIGN", "ARRAY_INITIALIZER", "BLOCK", "CALL", "CALL_REPR", "CFG_NODE", "COMMENT", "CONTROL_STRUCTURE", "EXPRESSION", "FIELD_IDENTIFIER", "FILE", "IDENTIFIER", "IMPORT", "JUMP_LABEL", "JUMP_TARGET", "LITERAL", "LOCAL", "MEMBER", "METHOD", "METHOD_PARAMETER_IN", "METHOD_PARAMETER_OUT", "METHOD_REF", "METHOD_RETURN", "MODIFIER", "NAMESPACE", "NAMESPACE_BLOCK", "RETURN", "TEMPLATE_DOM", "TYPE_ARGUMENT", "TYPE_DECL", "TYPE_PARAMETER", "TYPE_REF", "UNKNOWN"), "CONDITION" -> Set("ANNOTATION", "ANNOTATION_LITERAL", "ANNOTATION_PARAMETER", "ANNOTATION_PARAMETER_ASSIGN", "ARRAY_INITIALIZER", "BLOCK", "CALL", "CALL_REPR", "CFG_NODE", "COMMENT", "CONTROL_STRUCTURE", "EXPRESSION", "FIELD_IDENTIFIER", "FILE", "IDENTIFIER", "IMPORT", "JUMP_LABEL", "JUMP_TARGET", "LITERAL", "LOCAL", "MEMBER", "METHOD", "METHOD_PARAMETER_IN", "METHOD_PARAMETER_OUT", "METHOD_REF", "METHOD_RETURN", "MODIFIER", "NAMESPACE", "NAMESPACE_BLOCK", "RETURN", "TEMPLATE_DOM", "TYPE_ARGUMENT", "TYPE_DECL", "TYPE_PARAMETER", "TYPE_REF", "UNKNOWN"), "CONTAINS" -> Set("ANNOTATION", "ANNOTATION_LITERAL", "ANNOTATION_PARAMETER", "ANNOTATION_PARAMETER_ASSIGN", "ARRAY_INITIALIZER", "BLOCK", "CALL", "CALL_REPR", "CFG_NODE", "COMMENT", "CONTROL_STRUCTURE", "EXPRESSION", "FIELD_IDENTIFIER", "FILE", "IDENTIFIER", "IMPORT", "JUMP_LABEL", "JUMP_TARGET", "LITERAL", "LOCAL", "MEMBER", "METHOD", "METHOD_PARAMETER_IN", "METHOD_PARAMETER_OUT", "METHOD_REF", "METHOD_RETURN", "MODIFIER", "NAMESPACE", "NAMESPACE_BLOCK", "RETURN", "TEMPLATE_DOM", "TYPE_ARGUMENT", "TYPE_DECL", "TYPE_PARAMETER", "TYPE_REF", "UNKNOWN"), "DOMINATE" -> Set("ANNOTATION", "ANNOTATION_LITERAL", "ANNOTATION_PARAMETER", "ANNOTATION_PARAMETER_ASSIGN", "ARRAY_INITIALIZER", "BLOCK", "CALL", "CALL_REPR", "CFG_NODE", "COMMENT", "CONTROL_STRUCTURE", "EXPRESSION", "FIELD_IDENTIFIER", "FILE", "IDENTIFIER", "IMPORT", "JUMP_LABEL", "JUMP_TARGET", "LITERAL", "LOCAL", "MEMBER", "METHOD", "METHOD_PARAMETER_IN", "METHOD_PARAMETER_OUT", "METHOD_REF", "METHOD_RETURN", "MODIFIER", "NAMESPACE", "NAMESPACE_BLOCK", "RETURN", "TEMPLATE_DOM", "TYPE_ARGUMENT", "TYPE_DECL", "TYPE_PARAMETER", "TYPE_REF", "UNKNOWN"), "EVAL_TYPE" -> Set("TYPE"), "IMPORTS" -> Set("DEPENDENCY"), "INHERITS_FROM" -> Set("TYPE"), "IS_CALL_FOR_IMPORT" -> Set("ANNOTATION", "ANNOTATION_LITERAL", "ANNOTATION_PARAMETER", "ANNOTATION_PARAMETER_ASSIGN", "ARRAY_INITIALIZER", "BLOCK", "CALL", "CALL_REPR", "CFG_NODE", "COMMENT", "CONTROL_STRUCTURE", "EXPRESSION", "FIELD_IDENTIFIER", "FILE", "IDENTIFIER", "IMPORT", "JUMP_LABEL", "JUMP_TARGET", "LITERAL", "LOCAL", "MEMBER", "METHOD", "METHOD_PARAMETER_IN", "METHOD_PARAMETER_OUT", "METHOD_REF", "METHOD_RETURN", "MODIFIER", "NAMESPACE", "NAMESPACE_BLOCK", "RETURN", "TEMPLATE_DOM", "TYPE_ARGUMENT", "TYPE_DECL", "TYPE_PARAMETER", "TYPE_REF", "UNKNOWN"), "PARAMETER_LINK" -> Set("ANNOTATION", "ANNOTATION_LITERAL", "ANNOTATION_PARAMETER", "ANNOTATION_PARAMETER_ASSIGN", "ARRAY_INITIALIZER", "BLOCK", "CALL", "CALL_REPR", "CFG_NODE", "COMMENT", "CONTROL_STRUCTURE", "EXPRESSION", "FIELD_IDENTIFIER", "FILE", "IDENTIFIER", "IMPORT", "JUMP_LABEL", "JUMP_TARGET", "LITERAL", "LOCAL", "MEMBER", "METHOD", "METHOD_PARAMETER_IN", "METHOD_PARAMETER_OUT", "METHOD_REF", "METHOD_RETURN", "MODIFIER", "NAMESPACE", "NAMESPACE_BLOCK", "RETURN", "TEMPLATE_DOM", "TYPE_ARGUMENT", "TYPE_DECL", "TYPE_PARAMETER", "TYPE_REF", "UNKNOWN"), "POST_DOMINATE" -> Set("ANNOTATION", "ANNOTATION_LITERAL", "ANNOTATION_PARAMETER", "ANNOTATION_PARAMETER_ASSIGN", "ARRAY_INITIALIZER", "BLOCK", "CALL", "CALL_REPR", "CFG_NODE", "COMMENT", "CONTROL_STRUCTURE", "EXPRESSION", "FIELD_IDENTIFIER", "FILE", "IDENTIFIER", "IMPORT", "JUMP_LABEL", "JUMP_TARGET", "LITERAL", "LOCAL", "MEMBER", "METHOD", "METHOD_PARAMETER_IN", "METHOD_PARAMETER_OUT", "METHOD_REF", "METHOD_RETURN", "MODIFIER", "NAMESPACE", "NAMESPACE_BLOCK", "RETURN", "TEMPLATE_DOM", "TYPE_ARGUMENT", "TYPE_DECL", "TYPE_PARAMETER", "TYPE_REF", "UNKNOWN"), "REACHING_DEF" -> Set("ANNOTATION", "ANNOTATION_LITERAL", "ANNOTATION_PARAMETER", "ANNOTATION_PARAMETER_ASSIGN", "ARRAY_INITIALIZER", "BLOCK", "CALL", "CALL_REPR", "CFG_NODE", "COMMENT", "CONTROL_STRUCTURE", "EXPRESSION", "FIELD_IDENTIFIER", "FILE", "IDENTIFIER", "IMPORT", "JUMP_LABEL", "JUMP_TARGET", "LITERAL", "LOCAL", "MEMBER", "METHOD", "METHOD_PARAMETER_IN", "METHOD_PARAMETER_OUT", "METHOD_REF", "METHOD_RETURN", "MODIFIER", "NAMESPACE", "NAMESPACE_BLOCK", "RETURN", "TEMPLATE_DOM", "TYPE_ARGUMENT", "TYPE_DECL", "TYPE_PARAMETER", "TYPE_REF", "UNKNOWN"), "RECEIVER" -> Set("ANNOTATION", "ANNOTATION_LITERAL", "ANNOTATION_PARAMETER", "ANNOTATION_PARAMETER_ASSIGN", "ARRAY_INITIALIZER", "BLOCK", "CALL", "CALL_REPR", "CFG_NODE", "COMMENT", "CONTROL_STRUCTURE", "EXPRESSION", "FIELD_IDENTIFIER", "FILE", "IDENTIFIER", "IMPORT", "JUMP_LABEL", "JUMP_TARGET", "LITERAL", "LOCAL", "MEMBER", "METHOD", "METHOD_PARAMETER_IN", "METHOD_PARAMETER_OUT", "METHOD_REF", "METHOD_RETURN", "MODIFIER", "NAMESPACE", "NAMESPACE_BLOCK", "RETURN", "TEMPLATE_DOM", "TYPE_ARGUMENT", "TYPE_DECL", "TYPE_PARAMETER", "TYPE_REF", "UNKNOWN"), "REF" -> Set("ANNOTATION", "ANNOTATION_LITERAL", "ANNOTATION_PARAMETER", "ANNOTATION_PARAMETER_ASSIGN", "ARRAY_INITIALIZER", "BLOCK", "CALL", "CALL_REPR", "CFG_NODE", "COMMENT", "CONTROL_STRUCTURE", "EXPRESSION", "FIELD_IDENTIFIER", "FILE", "IDENTIFIER", "IMPORT", "JUMP_LABEL", "JUMP_TARGET", "LITERAL", "LOCAL", "MEMBER", "METHOD", "METHOD_PARAMETER_IN", "METHOD_PARAMETER_OUT", "METHOD_REF", "METHOD_RETURN", "MODIFIER", "NAMESPACE", "NAMESPACE_BLOCK", "RETURN", "TEMPLATE_DOM", "TYPE", "TYPE_ARGUMENT", "TYPE_DECL", "TYPE_PARAMETER", "TYPE_REF", "UNKNOWN"), "SOURCE_FILE" -> Set("ANNOTATION", "ANNOTATION_LITERAL", "ANNOTATION_PARAMETER", "ANNOTATION_PARAMETER_ASSIGN", "ARRAY_INITIALIZER", "BLOCK", "CALL", "CALL_REPR", "CFG_NODE", "COMMENT", "CONTROL_STRUCTURE", "EXPRESSION", "FIELD_IDENTIFIER", "FILE", "IDENTIFIER", "IMPORT", "JUMP_LABEL", "JUMP_TARGET", "LITERAL", "LOCAL", "MEMBER", "METHOD", "METHOD_PARAMETER_IN", "METHOD_PARAMETER_OUT", "METHOD_REF", "METHOD_RETURN", "MODIFIER", "NAMESPACE", "NAMESPACE_BLOCK", "RETURN", "TEMPLATE_DOM", "TYPE_ARGUMENT", "TYPE_DECL", "TYPE_PARAMETER", "TYPE_REF", "UNKNOWN"), "TAGGED_BY" -> Set("TAG"))
  private val inNeighbors: Map[String, Set[String]] = Map("ARGUMENT" -> Set("ANNOTATION", "ANNOTATION_LITERAL", "ANNOTATION_PARAMETER", "ANNOTATION_PARAMETER_ASSIGN", "ARRAY_INITIALIZER", "BLOCK", "CALL", "CALL_REPR", "CFG_NODE", "COMMENT", "CONTROL_STRUCTURE", "EXPRESSION", "FIELD_IDENTIFIER", "FILE", "IDENTIFIER", "IMPORT", "JUMP_LABEL", "JUMP_TARGET", "LITERAL", "LOCAL", "MEMBER", "METHOD", "METHOD_PARAMETER_IN", "METHOD_PARAMETER_OUT", "METHOD_REF", "METHOD_RETURN", "MODIFIER", "NAMESPACE", "NAMESPACE_BLOCK", "RETURN", "TEMPLATE_DOM", "TYPE_ARGUMENT", "TYPE_DECL", "TYPE_PARAMETER", "TYPE_REF", "UNKNOWN"), "AST" -> Set("ANNOTATION", "ANNOTATION_LITERAL", "ANNOTATION_PARAMETER", "ANNOTATION_PARAMETER_ASSIGN", "ARRAY_INITIALIZER", "BLOCK", "CALL", "CALL_REPR", "CFG_NODE", "COMMENT", "CONTROL_STRUCTURE", "EXPRESSION", "FIELD_IDENTIFIER", "FILE", "IDENTIFIER", "IMPORT", "JUMP_LABEL", "JUMP_TARGET", "LITERAL", "LOCAL", "MEMBER", "METHOD", "METHOD_PARAMETER_IN", "METHOD_PARAMETER_OUT", "METHOD_REF", "METHOD_RETURN", "MODIFIER", "NAMESPACE", "NAMESPACE_BLOCK", "RETURN", "TEMPLATE_DOM", "TYPE", "TYPE_ARGUMENT", "TYPE_DECL", "TYPE_PARAMETER", "TYPE_REF", "UNKNOWN"), "BINDS_TO" -> Set("ANNOTATION", "ANNOTATION_LITERAL", "ANNOTATION_PARAMETER", "ANNOTATION_PARAMETER_ASSIGN", "ARRAY_INITIALIZER", "BLOCK", "CALL", "CALL_REPR", "CFG_NODE", "COMMENT", "CONTROL_STRUCTURE", "EXPRESSION", "FIELD_IDENTIFIER", "FILE", "IDENTIFIER", "IMPORT", "JUMP_LABEL", "JUMP_TARGET", "LITERAL", "LOCAL", "MEMBER", "METHOD", "METHOD_PARAMETER_IN", "METHOD_PARAMETER_OUT", "METHOD_REF", "METHOD_RETURN", "MODIFIER", "NAMESPACE", "NAMESPACE_BLOCK", "RETURN", "TEMPLATE_DOM", "TYPE_ARGUMENT", "TYPE_DECL", "TYPE_PARAMETER", "TYPE_REF", "UNKNOWN"), "CALL" -> Set("ANNOTATION", "ANNOTATION_LITERAL", "ANNOTATION_PARAMETER", "ANNOTATION_PARAMETER_ASSIGN", "ARRAY_INITIALIZER", "BLOCK", "CALL", "CALL_REPR", "CFG_NODE", "COMMENT", "CONTROL_STRUCTURE", "EXPRESSION", "FIELD_IDENTIFIER", "FILE", "IDENTIFIER", "IMPORT", "JUMP_LABEL", "JUMP_TARGET", "LITERAL", "LOCAL", "MEMBER", "METHOD", "METHOD_PARAMETER_IN", "METHOD_PARAMETER_OUT", "METHOD_REF", "METHOD_RETURN", "MODIFIER", "NAMESPACE", "NAMESPACE_BLOCK", "RETURN", "TEMPLATE_DOM", "TYPE_ARGUMENT", "TYPE_DECL", "TYPE_PARAMETER", "TYPE_REF", "UNKNOWN"), "CDG" -> Set("ANNOTATION", "ANNOTATION_LITERAL", "ANNOTATION_PARAMETER", "ANNOTATION_PARAMETER_ASSIGN", "ARRAY_INITIALIZER", "BLOCK", "CALL", "CALL_REPR", "CFG_NODE", "COMMENT", "CONTROL_STRUCTURE", "EXPRESSION", "FIELD_IDENTIFIER", "FILE", "IDENTIFIER", "IMPORT", "JUMP_LABEL", "JUMP_TARGET", "LITERAL", "LOCAL", "MEMBER", "METHOD", "METHOD_PARAMETER_IN", "METHOD_PARAMETER_OUT", "METHOD_REF", "METHOD_RETURN", "MODIFIER", "NAMESPACE", "NAMESPACE_BLOCK", "RETURN", "TEMPLATE_DOM", "TYPE_ARGUMENT", "TYPE_DECL", "TYPE_PARAMETER", "TYPE_REF", "UNKNOWN"), "CFG" -> Set("ANNOTATION", "ANNOTATION_LITERAL", "ANNOTATION_PARAMETER", "ANNOTATION_PARAMETER_ASSIGN", "ARRAY_INITIALIZER", "BLOCK", "CALL", "CALL_REPR", "CFG_NODE", "COMMENT", "CONTROL_STRUCTURE", "EXPRESSION", "FIELD_IDENTIFIER", "FILE", "IDENTIFIER", "IMPORT", "JUMP_LABEL", "JUMP_TARGET", "LITERAL", "LOCAL", "MEMBER", "METHOD", "METHOD_PARAMETER_IN", "METHOD_PARAMETER_OUT", "METHOD_REF", "METHOD_RETURN", "MODIFIER", "NAMESPACE", "NAMESPACE_BLOCK", "RETURN", "TEMPLATE_DOM", "TYPE_ARGUMENT", "TYPE_DECL", "TYPE_PARAMETER", "TYPE_REF", "UNKNOWN"), "CONDITION" -> Set("ANNOTATION", "ANNOTATION_LITERAL", "ANNOTATION_PARAMETER", "ANNOTATION_PARAMETER_ASSIGN", "ARRAY_INITIALIZER", "BLOCK", "CALL", "CALL_REPR", "CFG_NODE", "COMMENT", "CONTROL_STRUCTURE", "EXPRESSION", "FIELD_IDENTIFIER", "FILE", "IDENTIFIER", "IMPORT", "JUMP_LABEL", "JUMP_TARGET", "LITERAL", "LOCAL", "MEMBER", "METHOD", "METHOD_PARAMETER_IN", "METHOD_PARAMETER_OUT", "METHOD_REF", "METHOD_RETURN", "MODIFIER", "NAMESPACE", "NAMESPACE_BLOCK", "RETURN", "TEMPLATE_DOM", "TYPE_ARGUMENT", "TYPE_DECL", "TYPE_PARAMETER", "TYPE_REF", "UNKNOWN"), "CONTAINS" -> Set("ANNOTATION", "ANNOTATION_LITERAL", "ANNOTATION_PARAMETER", "ANNOTATION_PARAMETER_ASSIGN", "ARRAY_INITIALIZER", "BLOCK", "CALL", "CALL_REPR", "CFG_NODE", "COMMENT", "CONTROL_STRUCTURE", "EXPRESSION", "FIELD_IDENTIFIER", "FILE", "IDENTIFIER", "IMPORT", "JUMP_LABEL", "JUMP_TARGET", "LITERAL", "LOCAL", "MEMBER", "METHOD", "METHOD_PARAMETER_IN", "METHOD_PARAMETER_OUT", "METHOD_REF", "METHOD_RETURN", "MODIFIER", "NAMESPACE", "NAMESPACE_BLOCK", "RETURN", "TEMPLATE_DOM", "TYPE_ARGUMENT", "TYPE_DECL", "TYPE_PARAMETER", "TYPE_REF", "UNKNOWN"), "DOMINATE" -> Set("ANNOTATION", "ANNOTATION_LITERAL", "ANNOTATION_PARAMETER", "ANNOTATION_PARAMETER_ASSIGN", "ARRAY_INITIALIZER", "BLOCK", "CALL", "CALL_REPR", "CFG_NODE", "COMMENT", "CONTROL_STRUCTURE", "EXPRESSION", "FIELD_IDENTIFIER", "FILE", "IDENTIFIER", "IMPORT", "JUMP_LABEL", "JUMP_TARGET", "LITERAL", "LOCAL", "MEMBER", "METHOD", "METHOD_PARAMETER_IN", "METHOD_PARAMETER_OUT", "METHOD_REF", "METHOD_RETURN", "MODIFIER", "NAMESPACE", "NAMESPACE_BLOCK", "RETURN", "TEMPLATE_DOM", "TYPE_ARGUMENT", "TYPE_DECL", "TYPE_PARAMETER", "TYPE_REF", "UNKNOWN"), "IS_CALL_FOR_IMPORT" -> Set("ANNOTATION", "ANNOTATION_LITERAL", "ANNOTATION_PARAMETER", "ANNOTATION_PARAMETER_ASSIGN", "ARRAY_INITIALIZER", "BLOCK", "CALL", "CALL_REPR", "CFG_NODE", "COMMENT", "CONTROL_STRUCTURE", "EXPRESSION", "FIELD_IDENTIFIER", "FILE", "IDENTIFIER", "IMPORT", "JUMP_LABEL", "JUMP_TARGET", "LITERAL", "LOCAL", "MEMBER", "METHOD", "METHOD_PARAMETER_IN", "METHOD_PARAMETER_OUT", "METHOD_REF", "METHOD_RETURN", "MODIFIER", "NAMESPACE", "NAMESPACE_BLOCK", "RETURN", "TEMPLATE_DOM", "TYPE_ARGUMENT", "TYPE_DECL", "TYPE_PARAMETER", "TYPE_REF", "UNKNOWN"), "PARAMETER_LINK" -> Set("ANNOTATION", "ANNOTATION_LITERAL", "ANNOTATION_PARAMETER", "ANNOTATION_PARAMETER_ASSIGN", "ARRAY_INITIALIZER", "BLOCK", "CALL", "CALL_REPR", "CFG_NODE", "COMMENT", "CONTROL_STRUCTURE", "EXPRESSION", "FIELD_IDENTIFIER", "FILE", "IDENTIFIER", "IMPORT", "JUMP_LABEL", "JUMP_TARGET", "LITERAL", "LOCAL", "MEMBER", "METHOD", "METHOD_PARAMETER_IN", "METHOD_PARAMETER_OUT", "METHOD_REF", "METHOD_RETURN", "MODIFIER", "NAMESPACE", "NAMESPACE_BLOCK", "RETURN", "TEMPLATE_DOM", "TYPE_ARGUMENT", "TYPE_DECL", "TYPE_PARAMETER", "TYPE_REF", "UNKNOWN"), "POST_DOMINATE" -> Set("ANNOTATION", "ANNOTATION_LITERAL", "ANNOTATION_PARAMETER", "ANNOTATION_PARAMETER_ASSIGN", "ARRAY_INITIALIZER", "BLOCK", "CALL", "CALL_REPR", "CFG_NODE", "COMMENT", "CONTROL_STRUCTURE", "EXPRESSION", "FIELD_IDENTIFIER", "FILE", "IDENTIFIER", "IMPORT", "JUMP_LABEL", "JUMP_TARGET", "LITERAL", "LOCAL", "MEMBER", "METHOD", "METHOD_PARAMETER_IN", "METHOD_PARAMETER_OUT", "METHOD_REF", "METHOD_RETURN", "MODIFIER", "NAMESPACE", "NAMESPACE_BLOCK", "RETURN", "TEMPLATE_DOM", "TYPE_ARGUMENT", "TYPE_DECL", "TYPE_PARAMETER", "TYPE_REF", "UNKNOWN"), "REACHING_DEF" -> Set("ANNOTATION", "ANNOTATION_LITERAL", "ANNOTATION_PARAMETER", "ANNOTATION_PARAMETER_ASSIGN", "ARRAY_INITIALIZER", "BLOCK", "CALL", "CALL_REPR", "CFG_NODE", "COMMENT", "CONTROL_STRUCTURE", "EXPRESSION", "FIELD_IDENTIFIER", "FILE", "IDENTIFIER", "IMPORT", "JUMP_LABEL", "JUMP_TARGET", "LITERAL", "LOCAL", "MEMBER", "METHOD", "METHOD_PARAMETER_IN", "METHOD_PARAMETER_OUT", "METHOD_REF", "METHOD_RETURN", "MODIFIER", "NAMESPACE", "NAMESPACE_BLOCK", "RETURN", "TEMPLATE_DOM", "TYPE_ARGUMENT", "TYPE_DECL", "TYPE_PARAMETER", "TYPE_REF", "UNKNOWN"), "RECEIVER" -> Set("ANNOTATION", "ANNOTATION_LITERAL", "ANNOTATION_PARAMETER", "ANNOTATION_PARAMETER_ASSIGN", "ARRAY_INITIALIZER", "BLOCK", "CALL", "CALL_REPR", "CFG_NODE", "COMMENT", "CONTROL_STRUCTURE", "EXPRESSION", "FIELD_IDENTIFIER", "FILE", "IDENTIFIER", "IMPORT", "JUMP_LABEL", "JUMP_TARGET", "LITERAL", "LOCAL", "MEMBER", "METHOD", "METHOD_PARAMETER_IN", "METHOD_PARAMETER_OUT", "METHOD_REF", "METHOD_RETURN", "MODIFIER", "NAMESPACE", "NAMESPACE_BLOCK", "RETURN", "TEMPLATE_DOM", "TYPE_ARGUMENT", "TYPE_DECL", "TYPE_PARAMETER", "TYPE_REF", "UNKNOWN"), "REF" -> Set("ANNOTATION", "ANNOTATION_LITERAL", "ANNOTATION_PARAMETER", "ANNOTATION_PARAMETER_ASSIGN", "ARRAY_INITIALIZER", "BINDING", "BLOCK", "CALL", "CALL_REPR", "CFG_NODE", "CLOSURE_BINDING", "COMMENT", "CONTROL_STRUCTURE", "EXPRESSION", "FIELD_IDENTIFIER", "FILE", "IDENTIFIER", "IMPORT", "JUMP_LABEL", "JUMP_TARGET", "LITERAL", "LOCAL", "MEMBER", "METHOD", "METHOD_PARAMETER_IN", "METHOD_PARAMETER_OUT", "METHOD_REF", "METHOD_RETURN", "MODIFIER", "NAMESPACE", "NAMESPACE_BLOCK", "RETURN", "TEMPLATE_DOM", "TYPE", "TYPE_ARGUMENT", "TYPE_DECL", "TYPE_PARAMETER", "TYPE_REF", "UNKNOWN"), "SOURCE_FILE" -> Set("ANNOTATION", "ANNOTATION_LITERAL", "ANNOTATION_PARAMETER", "ANNOTATION_PARAMETER_ASSIGN", "ARRAY_INITIALIZER", "BLOCK", "CALL", "CALL_REPR", "CFG_NODE", "COMMENT", "CONTROL_STRUCTURE", "EXPRESSION", "FIELD_IDENTIFIER", "FILE", "IDENTIFIER", "IMPORT", "JUMP_LABEL", "JUMP_TARGET", "LITERAL", "LOCAL", "MEMBER", "METHOD", "METHOD_PARAMETER_IN", "METHOD_PARAMETER_OUT", "METHOD_REF", "METHOD_RETURN", "MODIFIER", "NAMESPACE", "NAMESPACE_BLOCK", "RETURN", "TEMPLATE_DOM", "TYPE_ARGUMENT", "TYPE_DECL", "TYPE_PARAMETER", "TYPE_REF", "UNKNOWN"))
}
class NewJumpLabel extends NewNode(18.toShort) with JumpLabelBase with AstNodeNew {
  override type StoredNodeType = JumpLabel
  override def label: String = "JUMP_LABEL"

  override def isValidOutNeighbor(edgeLabel: String, n: NewNode): Boolean = {
    NewJumpLabel.outNeighbors.getOrElse(edgeLabel, Set.empty).contains(n.label)
  }
  override def isValidInNeighbor(edgeLabel: String, n: NewNode): Boolean = {
    NewJumpLabel.inNeighbors.getOrElse(edgeLabel, Set.empty).contains(n.label)
  }

  var code: String = "<empty>": String
var columnNumber: Option[Int] = None
var lineNumber: Option[Int] = None
var name: String = "<empty>": String
var order: Int = -1: Int
var parserTypeName: String = "<empty>": String
  def code(value: String): this.type = {this.code = value; this }
def columnNumber(value: Int): this.type = {this.columnNumber = Option(value); this }
def columnNumber(value: Option[Int]): this.type = {this.columnNumber = value; this }
def lineNumber(value: Int): this.type = {this.lineNumber = Option(value); this }
def lineNumber(value: Option[Int]): this.type = {this.lineNumber = value; this }
def name(value: String): this.type = {this.name = value; this }
def order(value: Int): this.type = {this.order = value; this }
def parserTypeName(value: String): this.type = {this.parserTypeName = value; this }
  override def flattenProperties(interface: flatgraph.BatchedUpdateInterface): Unit = {
interface.insertProperty(this, 10, Iterator(this.code))
if(columnNumber.nonEmpty) interface.insertProperty(this, 11, this.columnNumber)
if(lineNumber.nonEmpty) interface.insertProperty(this, 34, this.lineNumber)
interface.insertProperty(this, 39, Iterator(this.name))
interface.insertProperty(this, 43, Iterator(this.order))
interface.insertProperty(this, 46, Iterator(this.parserTypeName))
}

  override def copy(): this.type = {
    val newInstance = new NewJumpLabel
    newInstance.code = this.code
newInstance.columnNumber = this.columnNumber
newInstance.lineNumber = this.lineNumber
newInstance.name = this.name
newInstance.order = this.order
newInstance.parserTypeName = this.parserTypeName
    newInstance.asInstanceOf[this.type]
  }

  override def productElementName(n: Int): String =
    n match {
      case 0 => "code"
case 1 => "columnNumber"
case 2 => "lineNumber"
case 3 => "name"
case 4 => "order"
case 5 => "parserTypeName"
      case _ => ""
    }

  override def productElement(n: Int): Any =
    n match {
      case 0 => this.code
case 1 => this.columnNumber
case 2 => this.lineNumber
case 3 => this.name
case 4 => this.order
case 5 => this.parserTypeName
      case _ => null
    }

  override def productPrefix = "NewJumpLabel"
  override def productArity = 6
  override def canEqual(that: Any): Boolean = that != null && that.isInstanceOf[NewJumpLabel]
}
