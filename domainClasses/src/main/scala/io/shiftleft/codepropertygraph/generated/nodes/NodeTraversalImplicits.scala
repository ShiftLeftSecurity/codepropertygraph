package io.shiftleft.codepropertygraph.generated.nodes

import overflowdb.traversal.Traversal

trait NodeTraversalImplicits extends NodeBaseTypeTraversalImplicits {
  implicit def toAnnotationTraversal[NodeType <: Annotation](trav: Traversal[NodeType]): AnnotationTraversal[NodeType] = new AnnotationTraversal(trav)
implicit def toAnnotationLiteralTraversal[NodeType <: AnnotationLiteral](trav: Traversal[NodeType]): AnnotationLiteralTraversal[NodeType] = new AnnotationLiteralTraversal(trav)
implicit def toAnnotationParameterTraversal[NodeType <: AnnotationParameter](trav: Traversal[NodeType]): AnnotationParameterTraversal[NodeType] = new AnnotationParameterTraversal(trav)
implicit def toAnnotationParameterAssignTraversal[NodeType <: AnnotationParameterAssign](trav: Traversal[NodeType]): AnnotationParameterAssignTraversal[NodeType] = new AnnotationParameterAssignTraversal(trav)
implicit def toArrayInitializerTraversal[NodeType <: ArrayInitializer](trav: Traversal[NodeType]): ArrayInitializerTraversal[NodeType] = new ArrayInitializerTraversal(trav)
implicit def toBindingTraversal[NodeType <: Binding](trav: Traversal[NodeType]): BindingTraversal[NodeType] = new BindingTraversal(trav)
implicit def toBlockTraversal[NodeType <: Block](trav: Traversal[NodeType]): BlockTraversal[NodeType] = new BlockTraversal(trav)
implicit def toCallTraversal[NodeType <: Call](trav: Traversal[NodeType]): CallTraversal[NodeType] = new CallTraversal(trav)
implicit def toClosureBindingTraversal[NodeType <: ClosureBinding](trav: Traversal[NodeType]): ClosureBindingTraversal[NodeType] = new ClosureBindingTraversal(trav)
implicit def toCommentTraversal[NodeType <: Comment](trav: Traversal[NodeType]): CommentTraversal[NodeType] = new CommentTraversal(trav)
implicit def toConfigFileTraversal[NodeType <: ConfigFile](trav: Traversal[NodeType]): ConfigFileTraversal[NodeType] = new ConfigFileTraversal(trav)
implicit def toControlStructureTraversal[NodeType <: ControlStructure](trav: Traversal[NodeType]): ControlStructureTraversal[NodeType] = new ControlStructureTraversal(trav)
implicit def toDependencyTraversal[NodeType <: Dependency](trav: Traversal[NodeType]): DependencyTraversal[NodeType] = new DependencyTraversal(trav)
implicit def toDetachedTrackingPointTraversal[NodeType <: DetachedTrackingPoint](trav: Traversal[NodeType]): DetachedTrackingPointTraversal[NodeType] = new DetachedTrackingPointTraversal(trav)
implicit def toDomAttributeTraversal[NodeType <: DomAttribute](trav: Traversal[NodeType]): DomAttributeTraversal[NodeType] = new DomAttributeTraversal(trav)
implicit def toDomNodeTraversal[NodeType <: DomNode](trav: Traversal[NodeType]): DomNodeTraversal[NodeType] = new DomNodeTraversal(trav)
implicit def toFieldIdentifierTraversal[NodeType <: FieldIdentifier](trav: Traversal[NodeType]): FieldIdentifierTraversal[NodeType] = new FieldIdentifierTraversal(trav)
implicit def toFileTraversal[NodeType <: File](trav: Traversal[NodeType]): FileTraversal[NodeType] = new FileTraversal(trav)
implicit def toFindingTraversal[NodeType <: Finding](trav: Traversal[NodeType]): FindingTraversal[NodeType] = new FindingTraversal(trav)
implicit def toFrameworkTraversal[NodeType <: Framework](trav: Traversal[NodeType]): FrameworkTraversal[NodeType] = new FrameworkTraversal(trav)
implicit def toFrameworkDataTraversal[NodeType <: FrameworkData](trav: Traversal[NodeType]): FrameworkDataTraversal[NodeType] = new FrameworkDataTraversal(trav)
implicit def toIdentifierTraversal[NodeType <: Identifier](trav: Traversal[NodeType]): IdentifierTraversal[NodeType] = new IdentifierTraversal(trav)
implicit def toImplicitCallTraversal[NodeType <: ImplicitCall](trav: Traversal[NodeType]): ImplicitCallTraversal[NodeType] = new ImplicitCallTraversal(trav)
implicit def toJumpTargetTraversal[NodeType <: JumpTarget](trav: Traversal[NodeType]): JumpTargetTraversal[NodeType] = new JumpTargetTraversal(trav)
implicit def toKeyValuePairTraversal[NodeType <: KeyValuePair](trav: Traversal[NodeType]): KeyValuePairTraversal[NodeType] = new KeyValuePairTraversal(trav)
implicit def toLiteralTraversal[NodeType <: Literal](trav: Traversal[NodeType]): LiteralTraversal[NodeType] = new LiteralTraversal(trav)
implicit def toLocalTraversal[NodeType <: Local](trav: Traversal[NodeType]): LocalTraversal[NodeType] = new LocalTraversal(trav)
implicit def toLocationTraversal[NodeType <: Location](trav: Traversal[NodeType]): LocationTraversal[NodeType] = new LocationTraversal(trav)
implicit def toMemberTraversal[NodeType <: Member](trav: Traversal[NodeType]): MemberTraversal[NodeType] = new MemberTraversal(trav)
implicit def toMetaDataTraversal[NodeType <: MetaData](trav: Traversal[NodeType]): MetaDataTraversal[NodeType] = new MetaDataTraversal(trav)
implicit def toMethodTraversal[NodeType <: Method](trav: Traversal[NodeType]): MethodTraversal[NodeType] = new MethodTraversal(trav)
implicit def toMethodInstTraversal[NodeType <: MethodInst](trav: Traversal[NodeType]): MethodInstTraversal[NodeType] = new MethodInstTraversal(trav)
implicit def toMethodParameterInTraversal[NodeType <: MethodParameterIn](trav: Traversal[NodeType]): MethodParameterInTraversal[NodeType] = new MethodParameterInTraversal(trav)
implicit def toMethodParameterOutTraversal[NodeType <: MethodParameterOut](trav: Traversal[NodeType]): MethodParameterOutTraversal[NodeType] = new MethodParameterOutTraversal(trav)
implicit def toMethodRefTraversal[NodeType <: MethodRef](trav: Traversal[NodeType]): MethodRefTraversal[NodeType] = new MethodRefTraversal(trav)
implicit def toMethodReturnTraversal[NodeType <: MethodReturn](trav: Traversal[NodeType]): MethodReturnTraversal[NodeType] = new MethodReturnTraversal(trav)
implicit def toModifierTraversal[NodeType <: Modifier](trav: Traversal[NodeType]): ModifierTraversal[NodeType] = new ModifierTraversal(trav)
implicit def toNamespaceTraversal[NodeType <: Namespace](trav: Traversal[NodeType]): NamespaceTraversal[NodeType] = new NamespaceTraversal(trav)
implicit def toNamespaceBlockTraversal[NodeType <: NamespaceBlock](trav: Traversal[NodeType]): NamespaceBlockTraversal[NodeType] = new NamespaceBlockTraversal(trav)
implicit def toPackagePrefixTraversal[NodeType <: PackagePrefix](trav: Traversal[NodeType]): PackagePrefixTraversal[NodeType] = new PackagePrefixTraversal(trav)
implicit def toPostExecutionCallTraversal[NodeType <: PostExecutionCall](trav: Traversal[NodeType]): PostExecutionCallTraversal[NodeType] = new PostExecutionCallTraversal(trav)
implicit def toReturnTraversal[NodeType <: Return](trav: Traversal[NodeType]): ReturnTraversal[NodeType] = new ReturnTraversal(trav)
implicit def toSinkTraversal[NodeType <: Sink](trav: Traversal[NodeType]): SinkTraversal[NodeType] = new SinkTraversal(trav)
implicit def toSourceTraversal[NodeType <: Source](trav: Traversal[NodeType]): SourceTraversal[NodeType] = new SourceTraversal(trav)
implicit def toTagTraversal[NodeType <: Tag](trav: Traversal[NodeType]): TagTraversal[NodeType] = new TagTraversal(trav)
implicit def toTagNodePairTraversal[NodeType <: TagNodePair](trav: Traversal[NodeType]): TagNodePairTraversal[NodeType] = new TagNodePairTraversal(trav)
implicit def toTagsTraversal[NodeType <: Tags](trav: Traversal[NodeType]): TagsTraversal[NodeType] = new TagsTraversal(trav)
implicit def toTypeTraversal[NodeType <: Type](trav: Traversal[NodeType]): TypeTraversal[NodeType] = new TypeTraversal(trav)
implicit def toTypeArgumentTraversal[NodeType <: TypeArgument](trav: Traversal[NodeType]): TypeArgumentTraversal[NodeType] = new TypeArgumentTraversal(trav)
implicit def toTypeDeclTraversal[NodeType <: TypeDecl](trav: Traversal[NodeType]): TypeDeclTraversal[NodeType] = new TypeDeclTraversal(trav)
implicit def toTypeParameterTraversal[NodeType <: TypeParameter](trav: Traversal[NodeType]): TypeParameterTraversal[NodeType] = new TypeParameterTraversal(trav)
implicit def toTypeRefTraversal[NodeType <: TypeRef](trav: Traversal[NodeType]): TypeRefTraversal[NodeType] = new TypeRefTraversal(trav)
implicit def toUnknownTraversal[NodeType <: Unknown](trav: Traversal[NodeType]): UnknownTraversal[NodeType] = new UnknownTraversal(trav)

  implicit def NewAnnotationBuilderToNewAnnotation(x : NewAnnotationBuilder) : NewAnnotation = x.build
implicit def NewAnnotationLiteralBuilderToNewAnnotationLiteral(x : NewAnnotationLiteralBuilder) : NewAnnotationLiteral = x.build
implicit def NewAnnotationParameterBuilderToNewAnnotationParameter(x : NewAnnotationParameterBuilder) : NewAnnotationParameter = x.build
implicit def NewAnnotationParameterAssignBuilderToNewAnnotationParameterAssign(x : NewAnnotationParameterAssignBuilder) : NewAnnotationParameterAssign = x.build
implicit def NewArrayInitializerBuilderToNewArrayInitializer(x : NewArrayInitializerBuilder) : NewArrayInitializer = x.build
implicit def NewBindingBuilderToNewBinding(x : NewBindingBuilder) : NewBinding = x.build
implicit def NewBlockBuilderToNewBlock(x : NewBlockBuilder) : NewBlock = x.build
implicit def NewCallBuilderToNewCall(x : NewCallBuilder) : NewCall = x.build
implicit def NewClosureBindingBuilderToNewClosureBinding(x : NewClosureBindingBuilder) : NewClosureBinding = x.build
implicit def NewCommentBuilderToNewComment(x : NewCommentBuilder) : NewComment = x.build
implicit def NewConfigFileBuilderToNewConfigFile(x : NewConfigFileBuilder) : NewConfigFile = x.build
implicit def NewControlStructureBuilderToNewControlStructure(x : NewControlStructureBuilder) : NewControlStructure = x.build
implicit def NewDependencyBuilderToNewDependency(x : NewDependencyBuilder) : NewDependency = x.build
implicit def NewDetachedTrackingPointBuilderToNewDetachedTrackingPoint(x : NewDetachedTrackingPointBuilder) : NewDetachedTrackingPoint = x.build
implicit def NewDomAttributeBuilderToNewDomAttribute(x : NewDomAttributeBuilder) : NewDomAttribute = x.build
implicit def NewDomNodeBuilderToNewDomNode(x : NewDomNodeBuilder) : NewDomNode = x.build
implicit def NewFieldIdentifierBuilderToNewFieldIdentifier(x : NewFieldIdentifierBuilder) : NewFieldIdentifier = x.build
implicit def NewFileBuilderToNewFile(x : NewFileBuilder) : NewFile = x.build
implicit def NewFindingBuilderToNewFinding(x : NewFindingBuilder) : NewFinding = x.build
implicit def NewFrameworkBuilderToNewFramework(x : NewFrameworkBuilder) : NewFramework = x.build
implicit def NewFrameworkDataBuilderToNewFrameworkData(x : NewFrameworkDataBuilder) : NewFrameworkData = x.build
implicit def NewIdentifierBuilderToNewIdentifier(x : NewIdentifierBuilder) : NewIdentifier = x.build
implicit def NewImplicitCallBuilderToNewImplicitCall(x : NewImplicitCallBuilder) : NewImplicitCall = x.build
implicit def NewJumpTargetBuilderToNewJumpTarget(x : NewJumpTargetBuilder) : NewJumpTarget = x.build
implicit def NewKeyValuePairBuilderToNewKeyValuePair(x : NewKeyValuePairBuilder) : NewKeyValuePair = x.build
implicit def NewLiteralBuilderToNewLiteral(x : NewLiteralBuilder) : NewLiteral = x.build
implicit def NewLocalBuilderToNewLocal(x : NewLocalBuilder) : NewLocal = x.build
implicit def NewLocationBuilderToNewLocation(x : NewLocationBuilder) : NewLocation = x.build
implicit def NewMemberBuilderToNewMember(x : NewMemberBuilder) : NewMember = x.build
implicit def NewMetaDataBuilderToNewMetaData(x : NewMetaDataBuilder) : NewMetaData = x.build
implicit def NewMethodBuilderToNewMethod(x : NewMethodBuilder) : NewMethod = x.build
implicit def NewMethodInstBuilderToNewMethodInst(x : NewMethodInstBuilder) : NewMethodInst = x.build
implicit def NewMethodParameterInBuilderToNewMethodParameterIn(x : NewMethodParameterInBuilder) : NewMethodParameterIn = x.build
implicit def NewMethodParameterOutBuilderToNewMethodParameterOut(x : NewMethodParameterOutBuilder) : NewMethodParameterOut = x.build
implicit def NewMethodRefBuilderToNewMethodRef(x : NewMethodRefBuilder) : NewMethodRef = x.build
implicit def NewMethodReturnBuilderToNewMethodReturn(x : NewMethodReturnBuilder) : NewMethodReturn = x.build
implicit def NewModifierBuilderToNewModifier(x : NewModifierBuilder) : NewModifier = x.build
implicit def NewNamespaceBuilderToNewNamespace(x : NewNamespaceBuilder) : NewNamespace = x.build
implicit def NewNamespaceBlockBuilderToNewNamespaceBlock(x : NewNamespaceBlockBuilder) : NewNamespaceBlock = x.build
implicit def NewPackagePrefixBuilderToNewPackagePrefix(x : NewPackagePrefixBuilder) : NewPackagePrefix = x.build
implicit def NewPostExecutionCallBuilderToNewPostExecutionCall(x : NewPostExecutionCallBuilder) : NewPostExecutionCall = x.build
implicit def NewReturnBuilderToNewReturn(x : NewReturnBuilder) : NewReturn = x.build
implicit def NewSinkBuilderToNewSink(x : NewSinkBuilder) : NewSink = x.build
implicit def NewSourceBuilderToNewSource(x : NewSourceBuilder) : NewSource = x.build
implicit def NewTagBuilderToNewTag(x : NewTagBuilder) : NewTag = x.build
implicit def NewTagNodePairBuilderToNewTagNodePair(x : NewTagNodePairBuilder) : NewTagNodePair = x.build
implicit def NewTagsBuilderToNewTags(x : NewTagsBuilder) : NewTags = x.build
implicit def NewTypeBuilderToNewType(x : NewTypeBuilder) : NewType = x.build
implicit def NewTypeArgumentBuilderToNewTypeArgument(x : NewTypeArgumentBuilder) : NewTypeArgument = x.build
implicit def NewTypeDeclBuilderToNewTypeDecl(x : NewTypeDeclBuilder) : NewTypeDecl = x.build
implicit def NewTypeParameterBuilderToNewTypeParameter(x : NewTypeParameterBuilder) : NewTypeParameter = x.build
implicit def NewTypeRefBuilderToNewTypeRef(x : NewTypeRefBuilder) : NewTypeRef = x.build
implicit def NewUnknownBuilderToNewUnknown(x : NewUnknownBuilder) : NewUnknown = x.build
}

// lower priority implicits for base types
trait NodeBaseTypeTraversalImplicits {
  implicit def toAstNodeTraversal[NodeType <: AstNode](trav: Traversal[NodeType]): AstNodeTraversal[NodeType] = new AstNodeTraversal(trav)
implicit def toCallReprTraversal[NodeType <: CallRepr](trav: Traversal[NodeType]): CallReprTraversal[NodeType] = new CallReprTraversal(trav)
implicit def toCfgNodeTraversal[NodeType <: CfgNode](trav: Traversal[NodeType]): CfgNodeTraversal[NodeType] = new CfgNodeTraversal(trav)
implicit def toDeclarationTraversal[NodeType <: Declaration](trav: Traversal[NodeType]): DeclarationTraversal[NodeType] = new DeclarationTraversal(trav)
implicit def toExpressionTraversal[NodeType <: Expression](trav: Traversal[NodeType]): ExpressionTraversal[NodeType] = new ExpressionTraversal(trav)
implicit def toLocalLikeTraversal[NodeType <: LocalLike](trav: Traversal[NodeType]): LocalLikeTraversal[NodeType] = new LocalLikeTraversal(trav)
implicit def toTrackingPointTraversal[NodeType <: TrackingPoint](trav: Traversal[NodeType]): TrackingPointTraversal[NodeType] = new TrackingPointTraversal(trav)
implicit def toWithinMethodTraversal[NodeType <: WithinMethod](trav: Traversal[NodeType]): WithinMethodTraversal[NodeType] = new WithinMethodTraversal(trav)
}
