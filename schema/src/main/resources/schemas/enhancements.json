{
    // enhancement nodes/edges that will automatically be derived from the cpg
    // note: these should *NOT* be written by the language frontend.

    "nodeKeys" : [
      {"id" : 8, "name": "VALUE", "comment" : "Tag value", "valueType" : "string", "cardinality" : "one"},
      {"id" : 1002, "name": "IS_METHOD_NEVER_OVERRIDDEN", "comment" : "True if the referenced method is never overridden by the subclasses and false otherwise", "valueType" : "boolean", "cardinality" : "zeroOrOne"},
      { "id" : 119, "name" : "POLICY_DIRECTORIES", "comment": "Sub directories of the policy directory that should be loaded when processing the CPG", "valueType" : "string", "cardinality" : "list"},
      {"id": 15, "name" : "EVALUATION_STRATEGY", "comment" : "Evaluation strategy for function parameters and return values. One of the values in \"evaluationStrategies\"", "valueType" : "string", "cardinality" : "one"},
      {"id": 25, "name": "DISPATCH_TYPE", "comment": "The dispatch type of a call, which is either static or dynamic. See dispatchTypes", "valueType" : "string", "cardinality" : "one"},
      {"id": 1591, "name" : "DYNAMIC_TYPE_HINT_FULL_NAME", "comment" : "Type hint for the dynamic type", "valueType" : "string", "cardinality" : "list"},
      {"id": 56, "name" : "AST_PARENT_TYPE", "comment" : "The type of the AST parent. Since this is only used in some parts of the graph the list does not include all possible parents by intention. Possible parents: METHOD, TYPE_DECL, NAMESPACE_BLOCK", "valueType" : "string", "cardinality" : "one"},
      {"id": 57, "name" : "AST_PARENT_FULL_NAME", "comment" : "The FULL_NAME of a the AST parent of an entity", "valueType" : "string", "cardinality" : "one"}
    ],
    
    "edgeKeys" : [
      {"id": 1, "name" : "ALIAS", "comment" : "Defines whether a PROPAGATE edge creates an alias", "valueType"     : "boolean", "cardinality" : "one" },
      {"id" : 11, "name" : "VARIABLE", "comment" : "A variable propagated by a reaching-def edge", "valueType" : "string", "cardinality" : "one"}
    ],

    "nodeTypes" : [
    
      {"id" : 146, "name" : "BINDING",
       	 "keys" : ["NAME", "SIGNATURE"],
         "comment" : "A binding of a METHOD into a TYPE_DECL",
         "outEdges" : [
           {"edgeName": "REF", "inNodes": [
            {"name":"METHOD", "cardinality": "n:1"}
           ]}
         ]
      },
      {
        "id":307,"name" : "IMPLICIT_CALL",
          "keys" : ["CODE", "NAME", "SIGNATURE", "LINE_NUMBER", "COLUMN_NUMBER", "ORDER"],
        "comment" : "An implicit call site hidden in a method indicated by METHOD_MAP policy entries",
        "is": ["CALL_REPR", "TRACKING_POINT"],
        "outEdges" : []
      },
      {
        "id":3071,"name" : "POST_EXECUTION_CALL",
        "keys" : ["CODE", "NAME", "SIGNATURE", "LINE_NUMBER", "COLUMN_NUMBER", "ORDER"],
        "comment" : "Indicates the existence of a call executed on a return value or out parameter of a method after this method has been executed. This is used to model framework code calling functors returned from user code. The outgoing REF edge indicates on which returned entitity the call will happen.",
        "is": ["CALL_REPR", "TRACKING_POINT"],
        "outEdges" : [
          {"edgeName": "REF", "inNodes": [{"name": "METHOD_RETURN"}, {"name": "METHOD_PARAMETER_OUT"}]}
        ]
      },

      {"id":24, "name": "TAG",
         "keys": ["NAME", "VALUE"],
         "comment": "A string tag",
         "outEdges": []
        },
        {
            "id":40,
            "name": "NAMESPACE",
            "keys": ["NAME", "ORDER"],
            "comment": "This node represents a namespace as a whole whereas the NAMESPACE_BLOCK is used for each grouping occurrence of a namespace in code. Single representing NAMESPACE node is required for easier navigation in the query language",
          "is" : ["AST_NODE"],
          "outEdges": []
        },
        {
            "name" : "FILE", "outEdges" : [
                {"edgeName": "CONTAINS", "inNodes": [
              {"name": "TYPE_DECL"},
              {"name": "METHOD"}
		]},
	     {"edgeName": "TAGGED_BY", "inNodes": [{"name": "TAG"}]}
            ]
        },
	{ "name": "CALL",
	  "keys" : ["DISPATCH_TYPE", "DYNAMIC_TYPE_HINT_FULL_NAME"]
	},
        { "name": "METHOD",
          "keys" : ["AST_PARENT_TYPE", "AST_PARENT_FULL_NAME"],
          "outEdges" : [
             {"edgeName": "AST", "inNodes": [
              {"name": "TYPE_DECL", "cardinality": "0-1:n"},
              {"name": "METHOD", "cardinality": "0-1:n"},
              {"name": "METHOD_PARAMETER_OUT"},
              {"name": "IMPLICIT_CALL"},
              {"name": "POST_EXECUTION_CALL"}
            ]},
             {"edgeName": "REACHING_DEF", "inNodes": [
              {"name": "CALL"},
	      {"name": "RETURN"},
	      {"name": "IDENTIFIER"},
	      {"name": "METHOD_PARAMETER_IN"},
	      {"name": "LITERAL"},
        {"name" :  "METHOD_REF"}
            ]},
             {"edgeName": "CONTAINS", "inNodes": [
              {"name": "CALL"},
              {"name": "IDENTIFIER"},
              {"name": "FIELD_IDENTIFIER"},
              {"name": "LITERAL"},
              {"name": "RETURN"},
              {"name": "METHOD_REF"},
               {"name": "TYPE_REF"},
              {"name": "BLOCK"},
	      {"name" : "CONTROL_STRUCTURE"},
	      {"name" : "JUMP_TARGET"},
              {"name": "UNKNOWN"}
            ]},
             {"edgeName": "SOURCE_FILE", "inNodes": [{"name": "FILE"}]}
          ]
        },
        { "name" : "BINDING",
          "keys" : ["IS_METHOD_NEVER_OVERRIDDEN"]
        },
        { "name": "RETURN",
          "outEdges" : [
             {"edgeName": "REACHING_DEF", "inNodes": [{"name": "METHOD_RETURN"},{"name": "IDENTIFIER"}, {"name" :  "METHOD_REF"}]}
          ]
        },
        { "name" : "METHOD_REF",
           "outEdges" : [
             {"edgeName" :  "REACHING_DEF", "inNodes" :  [
               {"name": "CALL"},
               {"name": "RETURN"},
               {"name": "IDENTIFIER"},
               {"name": "LITERAL"},
               {"name" :  "METHOD_REF"}
             ]}
           ]
        },
        { "name": "METHOD_PARAMETER_IN",
	  "keys": ["EVALUATION_STRATEGY", "DYNAMIC_TYPE_HINT_FULL_NAME"],
          "outEdges" : [
            {"edgeName": "PROPAGATE", "inNodes": [
              {"name": "METHOD_PARAMETER_OUT"},
              {"name": "METHOD_RETURN"}
            ]},
            {"edgeName": "EVAL_TYPE", "inNodes": [{"name": "TYPE", "cardinality": "n:1"}]},
            {"edgeName": "REACHING_DEF", "inNodes": [
              {"name": "CALL"},
              {"name": "RETURN"},
	      {"name": "IDENTIFIER"},
	      {"name": "LITERAL"},
              {"name" :  "METHOD_REF"}
            ]},
            {"edgeName": "PARAMETER_LINK", "inNodes": [{"name": "METHOD_PARAMETER_OUT"}]}
          ]
        },
        {"id" : 33, "name" : "METHOD_PARAMETER_OUT",
         "keys": ["CODE", "ORDER", "NAME", "EVALUATION_STRATEGY", "TYPE_FULL_NAME", "LINE_NUMBER", "COLUMN_NUMBER"],
         "comment" : "This node represents a formal parameter going towards the caller side",
         "is": ["DECLARATION", "TRACKING_POINT", "AST_NODE"],
         "outEdges" : [
           {"edgeName": "TAGGED_BY", "inNodes": [{"name": "TAG"}]},
           {"edgeName": "EVAL_TYPE", "inNodes": [{"name": "TYPE"}]}
         ]
        },
        { "name": "METHOD_RETURN",
	  "keys": ["EVALUATION_STRATEGY", "DYNAMIC_TYPE_HINT_FULL_NAME"],
          "outEdges" : [
            {"edgeName": "EVAL_TYPE", "inNodes": [{"name": "TYPE"}]}
          ]
        },
        {
            "name": "NAMESPACE_BLOCK",
            "outEdges": [
              {"edgeName": "AST", "inNodes": [
              {"name": "TYPE_DECL", "cardinality": "0-1:n"},
              {"name": "METHOD", "cardinality": "0-1:n"}
            ]},
              {"edgeName": "REF", "inNodes": [{"name": "NAMESPACE"}]},
              {"edgeName": "SOURCE_FILE", "inNodes": [{"name": "FILE"}]}
            ]
        },
        { "name": "METHOD_REF",
	  "keys" : ["DYNAMIC_TYPE_HINT_FULL_NAME"],
          "outEdges" : [
            {"edgeName": "REF", "inNodes": [{"name": "METHOD", "cardinality": "n:1"}]},
            {"edgeName": "EVAL_TYPE", "inNodes": [{"name": "TYPE"}]}
          ]
        },
      { "name": "TYPE_REF",
        "keys" : ["DYNAMIC_TYPE_HINT_FULL_NAME"],
        "outEdges" : [
          {"edgeName": "EVAL_TYPE", "inNodes": [{"name": "TYPE"}]}
        ]
      },
      { "name": "TYPE",
          "outEdges" : [
             {"edgeName": "REF", "inNodes": [{"name": "TYPE_DECL"}]}
          ]
        },
        { "name": "TYPE_DECL",
          "keys" : ["AST_PARENT_TYPE", "AST_PARENT_FULL_NAME"],
          "outEdges" : [
             {"edgeName": "AST", "inNodes": [
              {"name": "TYPE_DECL", "cardinality": "0-1:n"},
              {"name": "METHOD", "cardinality": "0-1:n"}
            ]},
             {"edgeName": "INHERITS_FROM", "inNodes": [{"name": "TYPE"}]},
             {"edgeName": "ALIAS_OF", "inNodes": [{"name": "TYPE"}]},
             {"edgeName": "CONTAINS", "inNodes": [{"name": "METHOD"}]},
             {"edgeName": "SOURCE_FILE", "inNodes": [{"name": "FILE"}]},
             {"edgeName": "TYPE_DECL_ALIAS", "inNodes": [{"name": "TYPE_DECL"}]},
	     {"edgeName": "BINDS", "inNodes": [{"name":"BINDING", "cardinality": "1:n"}]}
          ]
        },
        { "name": "MEMBER",
	  "keys" : ["DYNAMIC_TYPE_HINT_FULL_NAME"],
          "outEdges" : [
            {"edgeName": "EVAL_TYPE", "inNodes": [{"name": "TYPE"}]}
          ]
        },
        {"name" : "LITERAL",
	  "keys" : ["DYNAMIC_TYPE_HINT_FULL_NAME"],
          "outEdges" : [
            {"edgeName": "EVAL_TYPE", "inNodes": [{"name": "TYPE"}]},
	    {"edgeName": "REACHING_DEF", "inNodes": [
              {"name": "CALL"},
              {"name": "RETURN"},
	      {"name": "IDENTIFIER"},
	      {"name" : "LITERAL"},
        {"name" :  "METHOD_REF"}
            ]}
          ]
        },
        { "name": "CALL",
          "outEdges" : [
            {"edgeName": "REF", "inNodes": [{"name": "MEMBER"}]},
            {"edgeName": "CALL", "inNodes": [{"name": "METHOD"}]},
            {"edgeName": "EVAL_TYPE", "inNodes": [{"name": "TYPE"}]},
            {"edgeName": "REACHING_DEF", "inNodes": [
              {"name": "CALL"},
              {"name": "RETURN"},
	      {"name": "IDENTIFIER"},
	      {"name": "LITERAL"},
              {"name" :  "METHOD_REF"}
            ]}
          ]
        },
        { "name": "LOCAL",
	  "keys" : ["DYNAMIC_TYPE_HINT_FULL_NAME"],
          "outEdges" : [
            {"edgeName": "EVAL_TYPE", "inNodes": [{"name": "TYPE"}]},
            {"edgeName": "CAPTURED_BY", "inNodes": [{"name": "CLOSURE_BINDING"}]}
          ]
        },
        {"name" : "IDENTIFIER",
	  "keys" : ["DYNAMIC_TYPE_HINT_FULL_NAME"],
          "outEdges" : [
            {"edgeName": "EVAL_TYPE", "inNodes": [{"name": "TYPE"}]},
	    {"edgeName": "REACHING_DEF", "inNodes": [
              {"name": "CALL"},
              {"name": "RETURN"},
	      {"name": "IDENTIFIER"},
	      {"name": "LITERAL"},
        {"name" :  "METHOD_REF"}
            ]}
          ]
        },
        {"name" : "BLOCK",
	  "keys" : ["DYNAMIC_TYPE_HINT_FULL_NAME"],
          "outEdges" : [
            {"edgeName": "EVAL_TYPE", "inNodes": [{"name": "TYPE"}]},
	    {"edgeName": "REACHING_DEF", "inNodes": [
              {"name": "CALL"},
              {"name": "RETURN"},
              {"name": "BLOCK"},
	      {"name": "IDENTIFIER"},
	      {"name": "LITERAL"},
        {"name" :  "METHOD_REF"}
            ]}
          ]
        },
	{"name" : "CONTROL_STRUCTURE",
          "outEdges" : [
            {"edgeName": "REACHING_DEF", "inNodes": [
              {"name": "CALL"},
              {"name": "RETURN"},
	      {"name": "IDENTIFIER"},
	      {"name": "LITERAL"},
              {"name" :  "METHOD_REF"}
            ]},
            {"edgeName": "EVAL_TYPE", "inNodes": [{"name": "TYPE"}]}
          ]
        },
        {"name" : "UNKNOWN",
	 "keys" : ["DYNAMIC_TYPE_HINT_FULL_NAME"],
          "outEdges" : [
            {"edgeName": "REACHING_DEF", "inNodes": [
              {"name": "CALL"},
              {"name": "RETURN"},
	      {"name": "IDENTIFIER"},
	      {"name": "LITERAL"},
              {"name" :  "METHOD_REF"}
            ]},
            {"edgeName": "EVAL_TYPE", "inNodes": [{"name": "TYPE"}]}
          ]
        },
      {
	"name" : "META_DATA",
	"keys": ["POLICY_DIRECTORIES"]
      }
    ],

    "edgeTypes" : [
        {"id" : 12, "name": "PARAMETER_LINK", "comment" : "Links together corresponding METHOD_PARAMETER_IN and METHOD_PARAMETER_OUT nodes", "keys": []},
        {"id" : 6, "name" : "CALL", "comment" : "Referencing to e.g. a LOCAL", "keys" : [] },
        {"id" : 11, "name": "TAGGED_BY", "keys" : [], "comment" : "Edges from nodes to tags"},

        {"id" : 21, "name" : "EVAL_TYPE", "comment" : "Link to evaluation type", "keys" : [] },
        {"id" : 23, "name" : "INHERITS_FROM", "comment" : "Inheritance relation between types", "keys" : [] },
        {"id" : 28, "name" : "CONTAINS", "keys" : [], "comment" : "Shortcut over multiple AST edges"},
        {"id" : 1, "name" : "PROPAGATE", "keys" : ["ALIAS"], "comment" : "Encodes propagation of data from on node to another. The ALIAS property is deprecated."},
        {"id" : 137, "name": "REACHING_DEF", "comment" : "Reaching definition edge", "keys" : ["VARIABLE"]},
        {"id" : 138, "name" : "ALIAS_OF", "comment" : "Alias relation between types", "keys" : [] },
        {"id" : 139, "name" : "TYPE_DECL_ALIAS", "comment" : "Alias relation between two TYPE_DECL", "keys" : [] },
	{"id" : 155, "name": "BINDS", "comment" : "Relation between TYPE_DECL and BINDING node", "keys": []}
    ],

    // Enums

    "dispatchTypes" : [
        {"id" : 1, "name" : "STATIC_DISPATCH", "comment": "For statically dispatched calls the call target is known before program execution"},
        {"id" : 2, "name" : "DYNAMIC_DISPATCH", "comment": "For dynamically dispatched calls the target is determined during runtime"}
    ],

    "evaluationStrategies" : [
        {"id" : 1, "name" : "BY_REFERENCE", "comment" : "A parameter or return of a function is passed by reference which means an address is used behind the scenes"},
        {"id" : 2, "name" : "BY_SHARING", "comment" : "Only applicable to object parameter or return values. The pointer to the object is passed by value but the object itself is not copied and changes to it are thus propagated out of the method context"},
        {"id" : 3, "name" : "BY_VALUE", "comment" : "A parameter or return of a function passed by value which means a flat copy is used"}
    ]

}
