name: CI pipeline

on:
  push:
    branches: [ master ]

jobs:
  test-codepropertygraph:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true
        fetch-depth: 0
    - name: Clone submodules
      run: git submodule update --init --recursive
    - name: apt-get update
      run: sudo apt-get update
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: 11
    - name: Compile and run tests
      run: sbt +test
    - name: Check formatting
      run: sbt scalafmtCheck test:scalafmtCheck "scalafixAll --check OrganizeImports"
    - run: echo "Previous step failed because code is not formatted. Run 'sbt format'"
      if: ${{ failure() }}

  release:
    concurrency: release
    needs: [test-codepropertygraph]
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
          fetch-depth: 0
      - name: Clone submodules
        run: git submodule update --init --recursive
      - name: apt-get update
        run: sudo apt-get update
      - name: Install gnupg
        run: sudo apt update && sudo apt install -y gnupg
      - name: Import GPG key
        run: echo $PGP_SECRET | base64 --decode | gpg --batch --import
        env:
            PGP_SECRET: ${{ secrets.PGP_SECRET }}
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11
      - name: Release to Sonatype
        run: sbt ciReleaseTagNextVersion ciReleaseSonatype
        env:
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
      - name: Export ENV vars
        run:
          echo "LATEST_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.LATEST_TAG }}
          release_name: ${{ env.LATEST_TAG }}
          draft: false
          prerelease: false
