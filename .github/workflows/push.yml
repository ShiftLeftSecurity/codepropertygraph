name: CI pipeline

on:
  push:
    branches: [ master ]

jobs:
  test-codepropertygraph:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true
        fetch-depth: 0
    - name: Clone submodules
      run: git submodule update --init --recursive
    - name: apt-get update
      run: sudo apt-get update
    - name: Set up JDK 1.8
      run: sudo apt-get install openjdk-8-jdk
    - name: Install specific sbt version
      run: sudo apt-get install -y --allow-downgrades sbt=1.3.12
    - name: Print sbt version
      run: sbt --version
    - name: Run tests
      run: sbt scalafmtCheck test

  test-fuzzypp-linux:
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - name: Clone submodules
        run: git submodule update --init --recursive
      - name: Install g++-8
        run: sudo apt-get install gcc-8 g++-8
      - name: Run cmake on fuzzypp
        run: cmake -DCMAKE_CXX_COMPILER=/usr/bin/g++-8 ./fuzzypp
      - name: Run cmake build
        run: cmake --build . -- -j4
      - name: Run fuzzyppcli-tests
        run: "./fuzzypp/bin/fuzzyppcli-tests"
      - name: Zip artifact
        run: zip -j ./fuzzyppcli.zip ./fuzzypp/bin/fuzzyppcli
      - name: Upload zip artifact
        uses: actions/upload-artifact@v2
        with:
          name: unix-zip
          path: ./fuzzyppcli.zip

  test-fuzzypp-windows:
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - name: Clone submodules
        run: git submodule update --init --recursive
      - name: Run cmake on fuzzypp
        run: cmake -G "Visual Studio 16 2019" -A "x64" ./fuzzypp
      - name: Run cmake build
        run: cmake --build . --config Release
      - name: Run fuzzyppcli-tests
        run: "./fuzzypp/bin/Release/fuzzyppcli-tests.exe"
      - name: Zip artifact
        run: 7z a -r -tzip ./fuzzyppcli-win.zip ./fuzzypp/bin/Release/fuzzyppcli.exe
      - name: Upload zip artifact
        uses: actions/upload-artifact@v2
        with:
          name: windows-zip
          path: ./fuzzyppcli-win.zip

  release:
    needs: [test-codepropertygraph, test-fuzzypp-linux, test-fuzzypp-windows]
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
          fetch-depth: 0
      - name: Clone submodules
        run: git submodule update --init --recursive
      - name: Set up JDK 1.8
        run: sudo apt-get install openjdk-8-jdk
      - name: Install specific sbt version
        run: sudo apt-get install -y --allow-downgrades sbt=1.3.12
      - name: Print sbt version
        run: sbt --version
      - name: Install gnupg
        run: sudo apt update && sudo apt install -y gnupg
      - name: Import GPG key
        run: echo $PGP_SECRET | base64 --decode | gpg --batch --import
        env:
            PGP_SECRET: ${{ secrets.PGP_SECRET }}
      - name: Release to Sonatype
        run: sbt ciReleaseTagNextVersion ciReleaseSonatype
        env:
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
      - name: Export ENV vars
        run:
          echo "LATEST_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.LATEST_TAG }}
          release_name: ${{ env.LATEST_TAG }}
          draft: false
          prerelease: false
      - name: Download unix zip
        uses: actions/download-artifact@v2
        with:
          name: unix-zip
      - name: Upload fuzzypp zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./fuzzyppcli.zip
          asset_name: fuzzyppcli.zip
          asset_content_type: application/zip
      - name: Download windows zip
        uses: actions/download-artifact@v2
        with:
          name: windows-zip
      - name: Upload fuzzypp Windows zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./fuzzyppcli-win.zip
          asset_name: fuzzyppcli-win.zip
          asset_content_type: application/zip
